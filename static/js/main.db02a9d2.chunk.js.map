{"version":3,"sources":["BooksAPI.js","selector.js","search.js","bookshelf.js","myreads.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","Selector","this","props","updateShelf","react_default","a","createElement","value","onChange","event","target","disabled","React","Component","Search","state","searchedBooks","error","showError","BooksAPI","console","log","_this2","className","react_router_dom","to","type","query","length","setState","map","find","searchedbook","catch","placeholder","key","style","width","height","backgroundImage","imageLinks","thumbnail","selector","title","authors","Bookshelf","_this","shelfTitle","Myreads","currentlyReading","wantToRead","read","newbook","oldShelf","newBooks","filter","push","oldBooks","bookshelf_Bookshelf","BookApp","Fragment","react_router","path","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"oRACMA,EAAM,wCAIRC,EAAQC,aAAaD,MACpBA,IACHA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAElE,IAAMC,EAAU,CACdC,OAAU,mBACVC,cAAiBR,GAQNS,EAAS,kBACpBC,MAAK,GAAAC,OAAIZ,EAAJ,UAAiB,CAAEO,YACrBM,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAKC,SAEVC,EAAS,SAACC,EAAMC,GAAP,OACpBT,MAAK,GAAAC,OAAIZ,EAAJ,WAAAY,OAAiBO,EAAKE,IAAM,CAC/BC,OAAQ,MACRf,QAAQgB,OAAAC,EAAA,EAAAD,CAAA,GACHhB,EADE,CAELkB,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAER,YACtBP,KAAK,SAAAC,GAAG,OAAIA,EAAIC,UCNNc,mLAtBX,IAAMV,EAAQW,KAAKC,MAAMZ,KACnBa,EAAcF,KAAKC,MAAMC,YAC/B,OACQC,EAAAC,EAAAC,cAAA,UACAC,MAAOjB,EAAKC,MAAMD,EAAKC,MAAQ,OAC9BiB,SACC,SAACC,GACCN,EAAYb,EAAMmB,EAAMC,OAAOH,SAM/BH,EAAAC,EAAAC,cAAA,UAAQC,MAAM,OAAOI,UAAQ,GAA7B,cACAP,EAAAC,EAAAC,cAAA,UAAQC,MAAM,oBAAd,qBACAH,EAAAC,EAAAC,cAAA,UAAQC,MAAM,cAAd,gBACAH,EAAAC,EAAAC,cAAA,UAAQC,MAAM,QAAd,QACAH,EAAAC,EAAAC,cAAA,UAAQC,MAAM,QAAd,gBAnBOK,IAAMC,WCqEdC,6MAjEbC,MAAQ,CACNC,cAAe,GACfC,MAAM,6BACNC,WAAU,KAEZf,YAAc,SAACb,EAAMC,GACnB4B,EAAgB7B,EAAMC,GAAOP,KAAM,SAAAC,GACjCmC,QAAQC,IAAIpC,8EAIP,IAAAqC,EAAArB,KACP,OACIG,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,gBACfnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,oBACbnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMD,UAAU,eAAeE,GAAG,MAClCrB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,8BAEbnB,EAAAC,EAAAC,cAAA,SAAOoB,KAAK,OACZlB,SAAW,SAAAC,GFSD,IAACkB,EERNlB,EAAMC,OAAOH,MAAMqB,OAAS,GFQtBD,EEPQlB,EAAMC,OAAOH,MFQ1CzB,MAAK,GAAAC,OAAIZ,EAAJ,WAAkB,CACrBsB,OAAQ,OACRf,QAAQgB,OAAAC,EAAA,EAAAD,CAAA,GACHhB,EADE,CAELkB,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAE4B,YACtB3C,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAKC,SEfPJ,KAAK,SAAAG,GAEEA,EAAK8B,MAOLK,EAAKO,SAAS,iBAAK,CAACb,cAAc,GAAGE,WAAU,KANlDC,IAAkBnC,KAAM,SAAAI,GAAWA,EAAM0C,IAAI,SAAAxC,GAEzCH,EAAK4C,KAAK,SAACC,GAAuBA,EAAaxC,IAAMF,EAAKE,KAAKwC,EAAazC,MAAQD,EAAKC,WAE7F+B,EAAKO,SAAS,iBAAK,CAACb,cAAc7B,EAAK+B,WAAU,SAInDe,MAAM,WAAMX,EAAKO,SAAS,CAACb,cAAc,GAAGE,WAAU,MAErDI,EAAKO,SAAS,iBAAK,CAACb,cAAc,GAAGE,WAAU,MAGtDgB,YAAY,gCAIhB9B,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,wBACZtB,KAAKc,MAAMG,UAAYd,EAAAC,EAAAC,cAAA,UAAKL,KAAKc,MAAME,OAAc,GACtDb,EAAAC,EAAAC,cAAA,MAAIiB,UAAU,cACXtB,KAAKc,MAAMC,cAAcc,IAAI,SAAAxC,GAAI,OAC9Bc,EAAAC,EAAAC,cAAA,MAAI6B,IAAK7C,EAAKE,IACdY,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,QACXnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,YACXnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,aAAaa,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,gBAAe,OAAAxD,OAASO,EAAKkD,WAAalD,EAAKkD,WAAWC,UAAW,GAAtD,QAC7ErC,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,sBACfnB,EAAAC,EAAAC,cAACoC,EAAD,CAAUpD,KAAMA,EAAMa,YAAamB,EAAKnB,gBAG5CC,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,cAAcjC,EAAKqD,OAClCvC,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,gBAAgBjC,EAAKsD,uBAzDnChC,IAAMC,WCFNgC,mLAEF,IAAAC,EAAA7C,KACD8C,EAAa9C,KAAKC,MAAM6C,WAElC,OACI3C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,aACfnB,EAAAC,EAAAC,cAAA,MAAIiB,UAAU,mBAAmBwB,GACjC3C,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,mBACXnB,EAAAC,EAAAC,cAAA,MAAIiB,UAAU,cACbtB,KAAKC,MAAMd,MAAM0C,IAAI,SAAAxC,GAAI,OAC1Bc,EAAAC,EAAAC,cAAA,MAAI6B,IAAK7C,EAAKE,IACdY,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,QACXnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,YACXnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,aAAaa,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,gBAAe,OAAAxD,OAASO,EAAKkD,WAAalD,EAAKkD,WAAWC,UAAW,GAAtD,QAC7ErC,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,sBACfnB,EAAAC,EAAAC,cAACoC,EAAD,CAAUpD,KAAMA,EAAMa,YAAa2C,EAAK5C,MAAMC,gBAGlDC,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,cAAcjC,EAAKqD,OAClCvC,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,gBAAgBjC,EAAKsD,wBArBjBhC,IAAMC,WCExBmC,6MAoBbjC,MAAQ,CACJ3B,MAAO,GACP6D,iBAAkB,GAClBC,WAAY,GACZC,KAAM,MAERhD,YAAc,SAACiD,EAAQ7D,GACrB6B,QAAQC,IAAI+B,GACZ,IAAIC,EAAWP,EAAK/B,MAAMqC,EAAQ7D,OAKlC,GAJA4B,EAAgBiC,EAAQ7D,GAAOP,KAAM,SAAAC,GACjCmC,QAAQC,IAAIpC,KAGL,QAARM,EAAe,CACd,IACI+D,EADWR,EAAK/B,MAAMxB,GACFgE,OACpB,SAAAjE,GAAI,OAAGA,EAAKE,KAAO4D,EAAQ5D,KAE/B8D,EAASE,KAAKJ,GACF,oBAAT7D,EACCuD,EAAKjB,SAAS,CAACoB,iBAAiBK,IACjB,cAAT/D,EACFuD,EAAKjB,SAAS,CAACqB,WAAWI,IACf,QAAT/D,GACFuD,EAAKjB,SAAS,CAACsB,KAAKG,IAG5B,IAAIG,EAAWJ,EAASE,OACpB,SAAAjE,GAAI,OAAGA,EAAKE,KAAO4D,EAAQ5D,KAEX,oBAAjB4D,EAAQ7D,MACXuD,EAAKjB,SAAS,CAACoB,iBAAiBQ,IACN,cAAjBL,EAAQ7D,MACbuD,EAAKjB,SAAS,CAACqB,WAAWO,IACH,QAAjBL,EAAQ7D,OACduD,EAAKjB,SAAS,CAACsB,KAAKM,wFAtDb,IAAAnC,EAAArB,KACfkB,IAAkBnC,KAAM,SAAAI,GACpBkC,EAAKO,SAAS,CAACzC,MAAMA,IACrBgC,QAAQC,IAAIC,EAAKP,MAAM3B,SACxBJ,KAAK,WACJsC,EAAKO,SAAS,CAACoB,iBAAiB3B,EAAKP,MAAM3B,MAAMmE,OAC7C,SAAAjE,GAAI,MAAiB,qBAAdA,EAAKC,UAGhB+B,EAAKO,SAAS,CAACqB,WAAW5B,EAAKP,MAAM3B,MAAMmE,OACnC,SAAAjE,GAAI,MAAiB,eAAdA,EAAKC,UAGpB+B,EAAKO,SAAS,CAACsB,KAAK7B,EAAKP,MAAM3B,MAAMmE,OACjC,SAAAjE,GAAI,MAAiB,SAAdA,EAAKC,6CA6CpB,OACIa,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,OACXnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,cACXnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,oBACXnB,EAAAC,EAAAC,cAAA,sBAEJF,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,sBACfnB,EAAAC,EAAAC,cAACoD,EAAD,CAAWX,WAAW,oBAAoB3D,MAAOa,KAAKc,MAAMkC,iBAAkB9C,YAAaF,KAAKE,cAChGC,EAAAC,EAAAC,cAACoD,EAAD,CAAWX,WAAW,eAAe3D,MAAOa,KAAKc,MAAMmC,WAAY/C,YAAaF,KAAKE,cACrFC,EAAAC,EAAAC,cAACoD,EAAD,CAAWX,WAAW,OAAO3D,MAAOa,KAAKc,MAAMoC,KAAMhD,YAAaF,KAAKE,gBAG/EC,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,eACXnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMC,GAAG,qBAzEQb,IAAMC,WCgB5B8C,mLAbX,OACEvD,EAAAC,EAAAC,cAACF,EAAAC,EAAMuD,SAAP,KACExD,EAAAC,EAAAC,cAACkB,EAAA,EAAD,KACApB,EAAAC,EAAAC,cAACuD,EAAA,EAAD,KACAzD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAOC,KAAK,UAAUC,UAAWjD,IACjCV,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAWf,cAPbpC,IAAMC,iBCA5BmD,IAASC,OAAO7D,EAAAC,EAAAC,cAAC4D,EAAD,MAAaC,SAASC,eAAe","file":"static/js/main.db02a9d2.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nclass Selector extends React.Component {\r\n  render() {\r\n    const book  = this.props.book;\r\n    const updateShelf = this.props.updateShelf;\r\n    return(\r\n            <select\r\n            value={book.shelf?book.shelf : 'none'}\r\n             onChange={\r\n              (event)=> {\r\n                updateShelf(book, event.target.value)\r\n                // console.log(book)\r\n                // BooksAPI.update(book, event.target.value).then( res => {\r\n                //   console.log(res)\r\n                // })\r\n              }}>\r\n                <option value=\"move\" disabled>Move to...</option>\r\n                <option value=\"currentlyReading\">Currently Reading</option>\r\n                <option value=\"wantToRead\">Want to Read</option>\r\n                <option value=\"read\">Read</option>\r\n                <option value=\"none\">None</option>\r\n              </select>\r\n          ) \r\n }\r\n}\r\nexport default Selector","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport * as BooksAPI from './BooksAPI'\r\nimport Selector from './selector'\r\nclass Search extends React.Component {\r\n\r\n  state = {\r\n    searchedBooks: [],\r\n    error:'No books match your search',\r\n    showError:false,\r\n  }\r\n  updateShelf = (book, shelf) =>{\r\n    BooksAPI.update(book, shelf).then( res => {\r\n      console.log(res)\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n        <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link className=\"close-search\" to=\"/\"></Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            \r\n            <input type=\"text\"\r\n            onChange={ event =>{\r\n              if(event.target.value.length > 0){\r\n               BooksAPI.search(event.target.value)\r\n               .then(data =>\r\n                {\r\n                  if( !data.error){ //find if searched book has a shelf and assign this shelf value to it\r\n                    BooksAPI.getAll().then( books => { books.map(book =>\r\n                       { \r\n                        data.find((searchedbook) => { if (searchedbook.id == book.id){ searchedbook.shelf = book.shelf} })\r\n                      } )\r\n                    this.setState(()=>({searchedBooks:data,showError:false}))\r\n                  }) }\r\n                  else{this.setState(()=>({searchedBooks:[],showError:true}))}\r\n                }\r\n                ).catch(() =>{this.setState({searchedBooks:[],showError:true})})\r\n              } \r\n              else{this.setState(()=>({searchedBooks:[],showError:false}))}\r\n            }\r\n            }\r\n            placeholder=\"Search by title or author\"/>\r\n        \r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          {this.state.showError? (<h1>{this.state.error}</h1>):('')}\r\n          <ol className=\"books-grid\">\r\n            {this.state.searchedBooks.map(book =>\r\n              ( <li key={book.id}>\r\n                <div className=\"book\">\r\n                    <div className=\"book-top\">\r\n                        <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks ? book.imageLinks.thumbnail: ''})`, }}></div>\r\n                        <div className=\"book-shelf-changer\">\r\n                        <Selector book={book} updateShelf={this.updateShelf}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"book-title\">{book.title}</div>\r\n                    <div className=\"book-authors\">{book.authors}</div>\r\n                    </div>\r\n              </li>)\r\n              )}\r\n          </ol>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n}\r\nexport default Search","import React from 'react'\r\nimport Selector from './selector'\r\nexport default class Bookshelf extends React.Component {\r\n\r\n          render() {  \r\n            const shelfTitle = this.props.shelfTitle;\r\n            // const updateShelf = this.props.updateShelf;\r\n        return (\r\n            <div>\r\n            <div className=\"bookshelf\">\r\n            <h2 className=\"bookshelf-title\">{shelfTitle}</h2>\r\n            <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                {this.props.books.map(book =>\r\n              ( <li key={book.id}>\r\n                <div className=\"book\">\r\n                    <div className=\"book-top\">\r\n                        <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks ? book.imageLinks.thumbnail: ''})`, }}></div>\r\n                        <div className=\"book-shelf-changer\">\r\n                        <Selector book={book} updateShelf={this.props.updateShelf}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"book-title\">{book.title}</div>\r\n                    <div className=\"book-authors\">{book.authors}</div>\r\n                    </div>\r\n              </li>)\r\n              )}\r\n                </ol>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            )\r\n        }\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Bookshelf from './bookshelf'\r\nimport * as BooksAPI from './BooksAPI'\r\nexport default class Myreads extends React.Component {\r\n        componentDidMount(){\r\n            BooksAPI.getAll().then( books => {\r\n                this.setState({books:books});\r\n                console.log(this.state.books);\r\n            }).then(()=>{\r\n                this.setState({currentlyReading:this.state.books.filter(\r\n                    book=>(book.shelf ===\"currentlyReading\")\r\n                    )\r\n                });\r\n                this.setState({wantToRead:this.state.books.filter(\r\n                        book=>(book.shelf ===\"wantToRead\")\r\n                    )\r\n                });\r\n                this.setState({read:this.state.books.filter(\r\n                    book=>(book.shelf ===\"read\")\r\n                    )\r\n                });\r\n            })\r\n        }\r\n        state = {\r\n            books: [],\r\n            currentlyReading: [],\r\n            wantToRead: [],\r\n            read: [],\r\n          }\r\n          updateShelf = (newbook,shelf) =>{\r\n            console.log(newbook)\r\n            let oldShelf = this.state[newbook.shelf]\r\n            BooksAPI.update(newbook,shelf).then( res => {\r\n                console.log(res)\r\n                // newbook.shelf = shelf \r\n              })\r\n            if(shelf !='none'){\r\n                let newShelf = this.state[shelf]\r\n                let newBooks = newShelf.filter(\r\n                    book=>(book.id !== newbook.id)\r\n                )\r\n                newBooks.push(newbook);\r\n                if(shelf == \"currentlyReading\" ){\r\n                    this.setState({currentlyReading:newBooks});\r\n                }else if (shelf == \"wantToRead\" ){\r\n                        this.setState({wantToRead:newBooks});\r\n                }else if (shelf == \"read\" ){\r\n                        this.setState({read:newBooks});\r\n                }\r\n            } \r\n                let oldBooks = oldShelf.filter(\r\n                    book=>(book.id !== newbook.id)\r\n                )\r\n                if(newbook.shelf == \"currentlyReading\" ){\r\n                this.setState({currentlyReading:oldBooks});}\r\n                else if (newbook.shelf == \"wantToRead\" ){\r\n                    this.setState({wantToRead:oldBooks});\r\n                }else if (newbook.shelf == \"read\" ){\r\n                    this.setState({read:oldBooks});\r\n                }\r\n             \r\n          }\r\n          render() {\r\n            return (\r\n                <div className=\"app\">\r\n                    <div className=\"list-books\">\r\n                        <div className=\"list-books-title\">\r\n                            <h1>MyReads</h1>\r\n                        </div>\r\n                        <div className=\"list-books-content\">\r\n                        <Bookshelf shelfTitle=\"Currently Reading\" books={this.state.currentlyReading} updateShelf={this.updateShelf}></Bookshelf>\r\n                        <Bookshelf shelfTitle=\"Want to Read\" books={this.state.wantToRead} updateShelf={this.updateShelf}></Bookshelf>\r\n                        <Bookshelf shelfTitle=\"Read\" books={this.state.read} updateShelf={this.updateShelf}></Bookshelf>\r\n                        </div>\r\n                        </div>\r\n                <div className=\"open-search\">\r\n                    <Link to=\"/search\"></Link>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n}","import React from 'react'\r\nimport './App.css'\r\nimport {Route , BrowserRouter, Switch} from 'react-router-dom'\r\nimport Search from './search'\r\nimport Myreads from './myreads'\r\nclass BookApp extends React.Component {\r\n  render() {\r\n    return(\r\n      <React.Fragment>\r\n        <BrowserRouter>\r\n        <Switch>\r\n        <Route path=\"/search\" component={Search}></Route>\r\n        <Route path=\"/\" component={Myreads}></Route>\r\n        </Switch>\r\n        </BrowserRouter>\r\n    </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BookApp\r\n ","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport BookApp from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<BookApp />, document.getElementById('root'))\r\n"],"sourceRoot":""}